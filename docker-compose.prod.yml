version: '3.3'
services:
  node:
    container_name: node
    build:
      context: .
      dockerfile: ./production/Dockerfile
    image: 'node:latest'
    working_dir: /home/counia/app
    env_file:
      - .env
    ports:
      - 80
    volumes:
      - './src:/home/counia/app' 
    links:
      - mongo
    networks:
      - back


  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: always
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo_volume:/data/db
    working_dir: /data/db
    ports:
      - '27017:27017'
    networks:
      - back

  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${ME_CONFIG_MONGODB_AUTH_DATABASE}
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${ME_CONFIG_MONGODB_AUTH_USERNAME}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${ME_CONFIG_MONGODB_AUTH_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    ports:
      - '8081:8081'
    depends_on:
      - mongo
    networks:
      - back

  nginx:
    container_name: nginx
    image: nginx
    build: ./nginx
    volumes:
      - server_volume:/home/src/app/web/staticfiles
    ports:
      - "8080:80"
    depends_on:
      - node
    networks:
      - back

volumes:
  mongo_volume:
  server_volume:

networks:
  back:
    driver: bridge
