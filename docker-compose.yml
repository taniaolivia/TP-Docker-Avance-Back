version: '3.3'
services:
  node:
    container_name: node
    image: 'node:latest'
    working_dir: /home/node/app
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - './src:/home/node/app'
    depends_on:
      - mongo
    links:
      - mongo
    networks:
      - back

  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: always
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    working_dir: /data/db
    ports:
      - '27017:27017'
    networks:
      - back

  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${ME_CONFIG_MONGODB_AUTH_DATABASE}
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${ME_CONFIG_MONGODB_AUTH_USERNAME}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${ME_CONFIG_MONGODB_AUTH_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    ports:
      - '8081:8081'
    depends_on:
      - mongo
    networks:
      - back

networks:
  back:
    driver: bridge
